// Generated by Dagger (https://dagger.dev).
package com.example.kinopoiskup.di;

import com.example.kinopoiskup.data.AppDatabase;
import com.example.kinopoiskup.entity.FilmDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvideFilmDaoFactory implements Factory<FilmDao> {
  private final DatabaseModule module;

  private final Provider<AppDatabase> appDatabaseProvider;

  public DatabaseModule_ProvideFilmDaoFactory(DatabaseModule module,
      Provider<AppDatabase> appDatabaseProvider) {
    this.module = module;
    this.appDatabaseProvider = appDatabaseProvider;
  }

  @Override
  public FilmDao get() {
    return provideFilmDao(module, appDatabaseProvider.get());
  }

  public static DatabaseModule_ProvideFilmDaoFactory create(DatabaseModule module,
      Provider<AppDatabase> appDatabaseProvider) {
    return new DatabaseModule_ProvideFilmDaoFactory(module, appDatabaseProvider);
  }

  public static FilmDao provideFilmDao(DatabaseModule instance, AppDatabase appDatabase) {
    return Preconditions.checkNotNullFromProvides(instance.provideFilmDao(appDatabase));
  }
}
