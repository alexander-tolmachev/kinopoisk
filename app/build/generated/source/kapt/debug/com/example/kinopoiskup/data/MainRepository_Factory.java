// Generated by Dagger (https://dagger.dev).
package com.example.kinopoiskup.data;

import com.example.kinopoiskup.entity.CollectionDao;
import com.example.kinopoiskup.entity.FilmDao;
import com.example.kinopoiskup.entity.StaffDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainRepository_Factory implements Factory<MainRepository> {
  private final Provider<RetrofitService> retrofitProvider;

  private final Provider<CollectionDao> collectionDaoProvider;

  private final Provider<FilmDao> filmDaoProvider;

  private final Provider<StaffDao> staffDaoProvider;

  public MainRepository_Factory(Provider<RetrofitService> retrofitProvider,
      Provider<CollectionDao> collectionDaoProvider, Provider<FilmDao> filmDaoProvider,
      Provider<StaffDao> staffDaoProvider) {
    this.retrofitProvider = retrofitProvider;
    this.collectionDaoProvider = collectionDaoProvider;
    this.filmDaoProvider = filmDaoProvider;
    this.staffDaoProvider = staffDaoProvider;
  }

  @Override
  public MainRepository get() {
    return newInstance(retrofitProvider.get(), collectionDaoProvider.get(), filmDaoProvider.get(), staffDaoProvider.get());
  }

  public static MainRepository_Factory create(Provider<RetrofitService> retrofitProvider,
      Provider<CollectionDao> collectionDaoProvider, Provider<FilmDao> filmDaoProvider,
      Provider<StaffDao> staffDaoProvider) {
    return new MainRepository_Factory(retrofitProvider, collectionDaoProvider, filmDaoProvider, staffDaoProvider);
  }

  public static MainRepository newInstance(RetrofitService retrofit, CollectionDao collectionDao,
      FilmDao filmDao, StaffDao staffDao) {
    return new MainRepository(retrofit, collectionDao, filmDao, staffDao);
  }
}
