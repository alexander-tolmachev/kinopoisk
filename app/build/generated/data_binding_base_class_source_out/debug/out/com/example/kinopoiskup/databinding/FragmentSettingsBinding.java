// Generated by view binder compiler. Do not edit!
package com.example.kinopoiskup.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.kinopoiskup.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.button.MaterialButtonToggleGroup;
import com.google.android.material.slider.RangeSlider;
import com.google.android.material.switchmaterial.SwitchMaterial;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton buttonClear;

  @NonNull
  public final MaterialButton buttonClear2;

  @NonNull
  public final MaterialButtonToggleGroup buttonGroupChain;

  @NonNull
  public final MaterialButtonToggleGroup buttonGroupChain2;

  @NonNull
  public final MaterialButton buttonOptions;

  @NonNull
  public final MaterialButton buttonOptions2;

  @NonNull
  public final MaterialButton buttonRead;

  @NonNull
  public final MaterialButton buttonRead2;

  @NonNull
  public final RangeSlider seekBar;

  @NonNull
  public final SwitchMaterial toggle;

  @NonNull
  public final TextView tvCountry;

  @NonNull
  public final TextView tvGenre;

  @NonNull
  public final TextView tvRating;

  @NonNull
  public final TextView tvStatus;

  @NonNull
  public final TextView tvYear;

  private FragmentSettingsBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton buttonClear, @NonNull MaterialButton buttonClear2,
      @NonNull MaterialButtonToggleGroup buttonGroupChain,
      @NonNull MaterialButtonToggleGroup buttonGroupChain2, @NonNull MaterialButton buttonOptions,
      @NonNull MaterialButton buttonOptions2, @NonNull MaterialButton buttonRead,
      @NonNull MaterialButton buttonRead2, @NonNull RangeSlider seekBar,
      @NonNull SwitchMaterial toggle, @NonNull TextView tvCountry, @NonNull TextView tvGenre,
      @NonNull TextView tvRating, @NonNull TextView tvStatus, @NonNull TextView tvYear) {
    this.rootView = rootView;
    this.buttonClear = buttonClear;
    this.buttonClear2 = buttonClear2;
    this.buttonGroupChain = buttonGroupChain;
    this.buttonGroupChain2 = buttonGroupChain2;
    this.buttonOptions = buttonOptions;
    this.buttonOptions2 = buttonOptions2;
    this.buttonRead = buttonRead;
    this.buttonRead2 = buttonRead2;
    this.seekBar = seekBar;
    this.toggle = toggle;
    this.tvCountry = tvCountry;
    this.tvGenre = tvGenre;
    this.tvRating = tvRating;
    this.tvStatus = tvStatus;
    this.tvYear = tvYear;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_clear;
      MaterialButton buttonClear = ViewBindings.findChildViewById(rootView, id);
      if (buttonClear == null) {
        break missingId;
      }

      id = R.id.button_clear2;
      MaterialButton buttonClear2 = ViewBindings.findChildViewById(rootView, id);
      if (buttonClear2 == null) {
        break missingId;
      }

      id = R.id.button_group_chain;
      MaterialButtonToggleGroup buttonGroupChain = ViewBindings.findChildViewById(rootView, id);
      if (buttonGroupChain == null) {
        break missingId;
      }

      id = R.id.button_group_chain2;
      MaterialButtonToggleGroup buttonGroupChain2 = ViewBindings.findChildViewById(rootView, id);
      if (buttonGroupChain2 == null) {
        break missingId;
      }

      id = R.id.button_options;
      MaterialButton buttonOptions = ViewBindings.findChildViewById(rootView, id);
      if (buttonOptions == null) {
        break missingId;
      }

      id = R.id.button_options2;
      MaterialButton buttonOptions2 = ViewBindings.findChildViewById(rootView, id);
      if (buttonOptions2 == null) {
        break missingId;
      }

      id = R.id.button_read;
      MaterialButton buttonRead = ViewBindings.findChildViewById(rootView, id);
      if (buttonRead == null) {
        break missingId;
      }

      id = R.id.button_read2;
      MaterialButton buttonRead2 = ViewBindings.findChildViewById(rootView, id);
      if (buttonRead2 == null) {
        break missingId;
      }

      id = R.id.seekBar;
      RangeSlider seekBar = ViewBindings.findChildViewById(rootView, id);
      if (seekBar == null) {
        break missingId;
      }

      id = R.id.toggle;
      SwitchMaterial toggle = ViewBindings.findChildViewById(rootView, id);
      if (toggle == null) {
        break missingId;
      }

      id = R.id.tvCountry;
      TextView tvCountry = ViewBindings.findChildViewById(rootView, id);
      if (tvCountry == null) {
        break missingId;
      }

      id = R.id.tvGenre;
      TextView tvGenre = ViewBindings.findChildViewById(rootView, id);
      if (tvGenre == null) {
        break missingId;
      }

      id = R.id.tvRating;
      TextView tvRating = ViewBindings.findChildViewById(rootView, id);
      if (tvRating == null) {
        break missingId;
      }

      id = R.id.tvStatus;
      TextView tvStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvStatus == null) {
        break missingId;
      }

      id = R.id.tvYear;
      TextView tvYear = ViewBindings.findChildViewById(rootView, id);
      if (tvYear == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((LinearLayout) rootView, buttonClear, buttonClear2,
          buttonGroupChain, buttonGroupChain2, buttonOptions, buttonOptions2, buttonRead,
          buttonRead2, seekBar, toggle, tvCountry, tvGenre, tvRating, tvStatus, tvYear);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
